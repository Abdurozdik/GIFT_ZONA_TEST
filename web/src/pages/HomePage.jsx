import React, { useEffect, useState } from "react";
import LoadingSpinner from "../components/LoadingSpinner";
import apiService from "../services/api";

/**
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–µ—Ç—Ç–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
 * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ IntroPage.js
 */
function HomePage({ user, onNavigate }) {
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);
  const [balance, setBalance] = useState(null);

  useEffect(() => {
    if (user?.id) {
      loadHomeData();
    }
  }, [user]);

  const loadHomeData = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const [balanceData, serverStatus] = await Promise.all([
        apiService.getUserBalance(user.id).catch(() => null),
        apiService.getServerStatus().catch(() => null)
      ]);
      
      if (balanceData?.success) {
        setBalance(balanceData.balance);
      }
      
      if (serverStatus) {
        setStats({
          serverRunning: true,
          telegramConnected: serverStatus.telegram_connected
        });
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleQuickAction = (action) => {
    switch (action) {
      case 'events':
        onNavigate('events');
        break;
      case 'profile':
        onNavigate('profile');
        break;
      case 'deposit':
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –¥–µ–ø–æ–∑–∏—Ç—É
        if (window.Telegram?.WebApp?.showAlert) {
          window.Telegram.WebApp.showAlert(
            'üíé –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –±–æ—Ç—É @gift_zona_bot'
          );
        } else {
          alert('üíé –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –±–æ—Ç—É @gift_zona_bot');
        }
        break;
      default:
        break;
    }
  };

  if (loading) {
    return <LoadingSpinner />;
  }

  return (
    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div style={{ 
        textAlign: 'center', 
        marginBottom: '30px',
        padding: '25px',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        borderRadius: '20px',
        color: 'white',
        boxShadow: '0 8px 32px rgba(0,0,0,0.1)'
      }}>
        <h1 style={{ margin: '0 0 10px 0', fontSize: '28px' }}>
          üéØ GIFT ZONA
        </h1>
        <p style={{ margin: '0 0 15px 0', fontSize: '16px', opacity: '0.9' }}>
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.first_name || '–ò–≥—Ä–æ–∫'}!
        </p>
        
        {balance && (
          <div style={{ 
            backgroundColor: 'rgba(255,255,255,0.2)',
            padding: '15px',
            borderRadius: '12px',
            marginTop: '15px'
          }}>
            <div style={{ fontSize: '14px', opacity: '0.9', marginBottom: '5px' }}>
              –í–∞—à –±–∞–ª–∞–Ω—Å:
            </div>
            <div style={{ fontSize: '24px', fontWeight: 'bold' }}>
              {balance.available_balance} ‚≠ê
            </div>
          </div>
        )}
      </div>

      {/* –ö–∞–∫ –∏–≥—Ä–∞—Ç—å */}
      <div style={{ 
        backgroundColor: 'white',
        borderRadius: '15px',
        padding: '25px',
        marginBottom: '25px',
        boxShadow: '0 4px 16px rgba(0,0,0,0.1)'
      }}>
        <h2 style={{ margin: '0 0 20px 0', color: '#333', textAlign: 'center' }}>
          üéÆ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å?
        </h2>
        
        <div style={{ display: 'grid', gap: '15px' }}>
          {[
            {
              icon: 'üíé',
              title: '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å',
              description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –±–æ—Ç—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤ –∑–≤–µ–∑–¥–∞—Ö'
            },
            {
              icon: 'üéØ',
              title: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ',
              description: '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ'
            },
            {
              icon: 'üí∞',
              title: '–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É',
              description: '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥ –∏ —É–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏'
            },
            {
              icon: 'üèÜ',
              title: '–ü–æ–ª—É—á–∏—Ç–µ –≤—ã–∏–≥—Ä—ã—à',
              description: '–ï—Å–ª–∏ –≤–∞—à –ø—Ä–æ–≥–Ω–æ–∑ –≤–µ—Ä–Ω—ã–π - –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–∏–≥—Ä—ã—à!'
            }
          ].map((step, index) => (
            <div key={index} style={{
              display: 'flex',
              alignItems: 'center',
              padding: '15px',
              backgroundColor: '#f8f9fa',
              borderRadius: '10px',
              border: '1px solid #e9ecef'
            }}>
              <div style={{ 
                fontSize: '24px', 
                marginRight: '15px',
                width: '40px',
                textAlign: 'center'
              }}>
                {step.icon}
              </div>
              <div>
                <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>
                  {step.title}
                </div>
                <div style={{ fontSize: '14px', color: '#666' }}>
                  {step.description}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div style={{ 
        backgroundColor: 'white',
        borderRadius: '15px',
        padding: '25px',
        marginBottom: '25px',
        boxShadow: '0 4px 16px rgba(0,0,0,0.1)'
      }}>
        <h2 style={{ margin: '0 0 20px 0', color: '#333', textAlign: 'center' }}>
          ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        </h2>
        
        <div style={{ 
          display: 'grid', 
          gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
          gap: '15px'
        }}>
          {[
            {
              key: 'events',
              icon: 'üéØ',
              title: '–°–æ–±—ã—Ç–∏—è',
              subtitle: '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É',
              color: '#28a745'
            },
            {
              key: 'profile',
              icon: 'üë§',
              title: '–ü—Ä–æ—Ñ–∏–ª—å',
              subtitle: '–ú–æ–∏ –ø–æ–¥–∞—Ä–∫–∏',
              color: '#007bff'
            },
            {
              key: 'deposit',
              icon: 'üíé',
              title: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
              subtitle: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫',
              color: '#ffc107'
            }
          ].map((action) => (
            <button
              key={action.key}
              onClick={() => handleQuickAction(action.key)}
              style={{
                padding: '20px 15px',
                backgroundColor: action.color,
                color: 'white',
                border: 'none',
                borderRadius: '12px',
                cursor: 'pointer',
                textAlign: 'center',
                transition: 'all 0.3s',
                fontSize: '14px'
              }}
              onMouseEnter={(e) => {
                e.target.style.transform = 'translateY(-2px)';
                e.target.style.boxShadow = '0 6px 20px rgba(0,0,0,0.2)';
              }}
              onMouseLeave={(e) => {
                e.target.style.transform = 'translateY(0)';
                e.target.style.boxShadow = 'none';
              }}
            >
              <div style={{ fontSize: '28px', marginBottom: '8px' }}>
                {action.icon}
              </div>
              <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>
                {action.title}
              </div>
              <div style={{ fontSize: '12px', opacity: '0.9' }}>
                {action.subtitle}
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ */}
      {stats && (
        <div style={{ 
          backgroundColor: '#f8f9fa',
          borderRadius: '10px',
          padding: '15px',
          textAlign: 'center',
          fontSize: '14px',
          color: '#666'
        }}>
          <div style={{ marginBottom: '5px' }}>
            –°—Ç–∞—Ç—É—Å: <span style={{ color: stats.serverRunning ? '#28a745' : '#dc3545' }}>
              {stats.serverRunning ? 'üü¢ –û–Ω–ª–∞–π–Ω' : 'üî¥ –û—Ñ–ª–∞–π–Ω'}
            </span>
          </div>
          <div>
            Telegram: <span style={{ color: stats.telegramConnected ? '#28a745' : '#ffc107' }}>
              {stats.telegramConnected ? 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω' : 'üü° –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
            </span>
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div style={{ 
        textAlign: 'center',
        marginTop: '30px',
        fontSize: '14px',
        color: '#666'
      }}>
        <p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏: <strong>@gift_zona_news</strong></p>
        <p>–ß–∞—Ç –∏–≥—Ä–æ–∫–æ–≤: <strong>@gift_zona_chat</strong></p>
      </div>
    </div>
  );
}

export default HomePage;

